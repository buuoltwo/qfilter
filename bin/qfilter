#!/usr/bin/env node --harmony

"use strict";


var path = require('path');
var cp = require('child_process');
var spawn = cp.spawn;
var chalk = require('chalk');
var nodemon = require('nodemon');

var pkg = require('../package.json');
var fs = require('fs');
var execfile = path.join(process.cwd(), 'gfile.js');

var util = require('../lib/util');


var argv = require('minimist')(process.argv.slice(2));

if (argv['v'] || argv['version']) {
  console.log(pkg.version);
  process.exit();
}

if (argv['h'] || argv['help'] || process.argv.length === 2) {

  console.log('')
  console.log('前端服务过滤器')
  console.log('')

  console.log('Usage:')
  console.log('')
  console.log('    qf -h|--help      #show help info')
  console.log('    qf -v|--version   #show version')
  console.log('    qf g              #generate a gfile.js')
  console.log('    qf s              #start server')
  console.log('')

  process.exit();

}

if (argv['_'].indexOf('g') !== -1) {
  var ws = fs.createWriteStream(path.join(process.cwd(), 'gfile.js'));
  var rs = fs.createReadStream(path.join(__dirname , '../test','_gfile.js'));
  rs.pipe(ws);

  rs.on('end',function (){
    util.log('gfile.js生成完毕。');
  })
}


if (argv['_'].indexOf('s') !== -1) {
  if (!fs.existsSync(execfile)) {
    util.error('当前目录下没有gfile.js，请检查。可以使用qf g生成一个。')
    process.exit();
  }

  nodemon({
    script: execfile,
    ext: 'js',
    ignore: ['node_modules/*'],
    nodeArgs: ['--harmony']
  });

  nodemon.on('start', function () {
    console.log('app has started');
  }).on('restart', function (files) {
    console.log('app restarted due to: ', files);
  });

}








